package com.sctbc.dao;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.hibernate.HibernateException;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.hibernate3.HibernateCallback;
import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.stereotype.Repository;

import com.sctbc.entity.Teachstaffinfo;
import com.sctbc.vo.TeachInfoVo;

@Repository
public class TeachstaffinfoDao {

	@Autowired
	HibernateTemplate hibernateTemplate;

	boolean result = false;
	public List<Teachstaffinfo> getTeachstaffinfoAll() {
		String hql = "from Teachstaffinfo";
		return hibernateTemplate.find(hql);
	}

	public Teachstaffinfo getTeachstaffinfo(String userId)
	{
		try {
			return hibernateTemplate.get(Teachstaffinfo.class, userId);
		} catch (Exception e) {
			// TODO: handle exception
			return null;
		}

	}

	public Teachstaffinfo insertTeachstaffinfo(Teachstaffinfo teachstaffinfo) {
		try {
			 hibernateTemplate.save(teachstaffinfo);
			return  teachstaffinfo;
		} catch (Exception e) {
			e.printStackTrace();
			return null;

		}
			}
	public boolean updateTeachstaffinfo(Teachstaffinfo teachstaffinfo) {
		try {
			hibernateTemplate.update(teachstaffinfo);
		} catch (Exception e) {
			result = false;
		}
		return result;
	}
	public boolean delTeachstaffinfo(int teachstaffinfoId) {
		Teachstaffinfo teachstaffinfo = hibernateTemplate.get(
				Teachstaffinfo.class, teachstaffinfoId);
		try {
			hibernateTemplate.delete(teachstaffinfo);
		} catch (Exception e) {
			result = false;
		}
		return result;
	}
	public List<Map<String, Object>> getTeachstaffinfoByDepId(int depid) {
		final String sql = "select * from teachstaffinfo where userID in (select userID from teachstaffenlargeinfo where depID="
				+ depid + ")";
		List<TeachInfoVo> TeachInfoVoList = new ArrayList<TeachInfoVo>();
		List<Map<String, Object>> TeachstaffinfoList = hibernateTemplate
				.executeFind(new HibernateCallback() {
					@Override
					public Object doInHibernate(Session session)
							throws HibernateException, SQLException {
						SQLQuery query = session.createSQLQuery(sql);
						return query.list();
					}
				});
		/*
		 * for (Map<String, Object> map : TeachstaffinfoList) { TeachInfoVo
		 * teachInfoVo = new TeachInfoVo();
		 * teachInfoVo.setId(Integer.parseInt(map.get("ID").toString()));
		 * teachInfoVo.setUserId(map.get("userID").toString());
		 * teachInfoVo.setName(map.get("name").toString());
		 * teachInfoVo.setSex(map.get("sex").toString());
		 * teachInfoVo.setEthnicity(map.get("ethnicity").toString());
		 * TeachInfoVoList.add(teachInfoVo); }
		 */
		return TeachstaffinfoList;
	}
}
