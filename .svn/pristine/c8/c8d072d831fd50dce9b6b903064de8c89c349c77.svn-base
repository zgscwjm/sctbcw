package com.sctbc.servers_impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import com.sctbc.dao.AuditingopinionDao;
import com.sctbc.dao.DeptinfoDao;
import com.sctbc.dao.TrainapplyDao;
import com.sctbc.dao.UserDao;
import com.sctbc.entity.Auditingopinion;
import com.sctbc.entity.Deptinfo;
import com.sctbc.entity.Trainapply;
import com.sctbc.entity.User;
import com.sctbc.server_i.IReviewTrain;

public class ReviewTrainServer implements IReviewTrain {

	@Autowired
	TrainapplyDao trainapplyDao;

	@Autowired
	ProcedureServer procedureServer;

	@Autowired
	AuditingopinionDao auditingopinionDao;
	
	
	@Autowired
	UserDao userDao;
	
	
	@Autowired
	DeptinfoDao deptinfoDao;

	public List<Map<String, String>> getProcedure(Trainapply trainapply) {

		int procedureId = trainapply.getTraininfo().getTraintype()
				.getTrainkindId();

		return procedureServer.getProcedItemByFirstId(procedureId);
	}

	public List<Auditingopinion> getAuditingopinionList(Trainapply trainapply) {

		return auditingopinionDao.getAuditItem(trainapply);
	}

	
	public void initItem(Trainapply trainapply,User user,String depName)
	{
		Auditingopinion auditingopinion=new Auditingopinion();
		auditingopinion.setTrainapply(trainapply);
		auditingopinion.setUser(user);
		auditingopinion.setAuditingOpinion("待审核");
		auditingopinion.setDenyReason("无");
		auditingopinion.setAuditingDepartment(depName);
	}
	
	
	public HashMap<String, String> check(int id) {

		
		HashMap<String, String> hashMap=new HashMap<String, String>();
		
		int flag;
		Trainapply trainapply = trainapplyDao.getTrainapplyById(id);
		List<Map<String, String>> proceduceList = this.getProcedure(trainapply);
		List<Auditingopinion> auditingopinions = this
				.getAuditingopinionList(trainapply);

		for (int i = 1; i < proceduceList.size() - 1; i++) {
			try {
				Auditingopinion auditingopinion = auditingopinions.get(i - 1);
				String type=auditingopinion.getAuditingOpinion();
				if (type.equals("待审核")) {
					flag=0;
					hashMap.put("flag", flag+"");
					hashMap.put("dep", auditingopinion.getAuditingDepartment());
					return hashMap;
				}else if(type.equals("拒绝")){
					flag=-1;
					hashMap.put("flag", flag+"");
					hashMap.put("dep", auditingopinion.getAuditingDepartment());
					return hashMap;
				}
				
			} catch (Exception e) {
				// TODO: handle exception
				flag=0;
				String depId=proceduceList.get(i).get("value");
				Deptinfo deptinfo=deptinfoDao.getDeptinfo(Integer.parseInt(depId));
				initItem(trainapply,userDao.getUserById(deptinfo.getDepLeaderId()),deptinfo.getDepName());
				hashMap.put("flag", flag+"");
				hashMap.put("dep", deptinfo.getDepName());
				return hashMap;
			
			}
		}
		
		flag=1;
		hashMap.put("flag", flag+"");
		hashMap.put("dep", "成功");
		return hashMap;

	}

}
