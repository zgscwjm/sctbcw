package com.sctbc.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sctbc.constant.Common_Base;
import com.sctbc.constant.Common_Procedure;
import com.sctbc.entity.Deptinfo;
import com.sctbc.server_i.IDeptInfo;
import com.sctbc.server_i.IProcedure;

@Controller
@RequestMapping(Common_Base.COMMON_PROCEDURE_MODULE)
public class ProcedureController {
	public static final String LISTPATH = "/sctbc/Page/procedure/list";
	public static final String ADDPATH = "/sctbc/Page/procedure/add";

	@Autowired
	IDeptInfo iDeptInfo;

	@Autowired
	IProcedure iProcedure;

	@RequestMapping(value = Common_Procedure.PROCEDURE_GETPROCEDUREALL)
	public String getProcedureAll(Model model) {

		return LISTPATH;
	}
	@RequestMapping(value = Common_Procedure.PROCEDURE_ADDPROCEDUREINDEX)
	public String addProcedureIndex(Model model) {
		List<Deptinfo> deptInfoList = iDeptInfo.getList();
		model.addAttribute("deptInfoList", deptInfoList);
		return ADDPATH;
	}

	@ResponseBody
	@RequestMapping(value = Common_Procedure.PROCEDURE_ADDPROCEDURE)
	public String addProcedure(Model model, HttpServletRequest request,
			String procedureName) {
		String[] depIdArray = request.getParameterValues("depIdArray");
		String[] depNameArray = request.getParameterValues("depNameArray");
		ArrayList<Map<String, String>> list = new ArrayList<Map<String, String>>();
		Map<String, String> map = new HashMap<String, String>();
		for(int i=0;i<depIdArray.length;i++){
			map.put(depIdArray[i].toString(), depNameArray[i].toString());
		}
		list.add(map);
		boolean result = iProcedure.addProced(list, procedureName);
		return result + "";
	}
}
